import asyncio  # импортирует модуль `asyncio`, который используется для работы с асинхронным программированием

import websockets  # импортирует модуль `websockets`, который предоставляет инструменты для работы с WebSocket-соединениями
from websockets import ServerConnection  # импортирует класс `ServerConnection` из модуля `websockets`, который представляет соединение сервера с клиентом через WebSocket

async def client():  # определяет асинхронную функцию `client`, которая будет использоваться для подключения к WebSocket-серверу
    uri = 'ws://localhost:8765'  # задает URI сервера, к которому будет подключаться клиент
    async with websockets.connect(uri) as websocket:  # асинхронно устанавливает соединение с WebSocket-сервером по указанному URI
        message = "Привет, сервер!"  # задает сообщение, которое клиент будет отправлять серверу
        await websocket.send(message)  # асинхронно отправляет сообщение серверу
        print(f"Сообщение: {message} отправлено серверу")  # выводит сообщение о том, что сообщение отправлено серверу

        response = await websocket.recv()  # асинхронно ожидает ответа от сервера
        print(f"Получено сообщение от сервера: {response}")  # выводит сообщение, полученное от сервера


asyncio.run(client())  # запускает асинхронную функцию `client`, которая устанавливает соединение с WebSocket-сервером и обменивается сообщениями