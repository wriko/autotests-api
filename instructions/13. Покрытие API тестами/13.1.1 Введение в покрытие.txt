Введение в покрытие (Test Coverage)
Что такое покрытие тестами?
Покрытие тестами (test coverage) — это показатель, который показывает, насколько хорошо ваш код или функциональность приложения покрыты автоматическими тестами. Это метрика, которая помогает ответить на вопрос: "Мы точно протестировали всё, что нужно?"

Другими словами — покрытие помогает нам понять, какие участки кода, сценарии, требования или интерфейсы были проверены, а какие остались без внимания.


Какие виды покрытия бывают?
Обычно выделяют два основных вида:

-----------------------------------
1. Покрытие кода (Code Coverage)
-----------------------------------
Это классическое покрытие, измеряется автоматически с помощью инструментов. Оно показывает, какая часть кода была выполнена во время тестов. Бывают разные подвиды:

Покрытие строк (Line coverage) — сколько строк кода было выполнено.
Покрытие условий (Branch coverage) — были ли выполнены все возможные ветвления (if, else, try, except и т.д.).
Покрытие функций / методов (Function coverage) — были ли вызваны все функции/методы.
Покрытие путей (Path coverage) — были ли протестированы все возможные пути выполнения кода.
Инструменты: coverage.py, pytest-cov, JaCoCo, Istanbul, и другие

-----------------------------------
2. Покрытие требований (Requirements Coverage)
-----------------------------------
Это более абстрактное покрытие — оно показывает, насколько тестами охвачены бизнес-требования или технические спецификации.

Например:

Есть ли автотест на регистрацию пользователя?
Проверяется ли валидация email?
Есть ли негативный сценарий при неправильном пароле?
Это покрытие нельзя измерить автоматически. Обычно его ведут вручную — в виде матрицы требований и тестов, либо с помощью систем управления тестированием (TestRail, Zephyr, Allure TestOPS и другие).

Как обычно измеряют покрытие?
Покрытие кода
Для Python-проектов один из самых популярных инструментов — coverage.py. Он встраивается в ваш тестовый раннер (например, pytest) и показывает, какие участки кода были выполнены.

coverage run -m pytest
coverage report -m
coverage html  # для красивого отчета в браузере
Покрытие требований
Это уже задача команды QA или тест-аналитика. Можно составить таблицу вида:

Требование	  Есть автотест?       	  Тип теста
Регистрация	✅	UI
Валидация email	✅	API
Сброс пароля	❌
Также можно использовать инструменты вроде Allure, XRay, TestRail и т.п., чтобы связывать автотесты с требованиями.


Для чего измерять покрытие?
1. Понимание рисков. Если какие-то участки кода или требования не покрыты — это потенциальные точки отказа.
2. Оптимизация усилий. Позволяет сфокусироваться на том, что ещё не проверено.
3. Контроль качества. Показывает, насколько команда придерживается стандарта тестирования.
4. Обоснование перед бизнесом. Можно наглядно показать, что 90% требований уже автоматизированы.
5. Интеграция с CI/CD. Покрытие можно использовать как метрику в пайплайне — например, не допускать к слиянию PR с падением покрытия ниже 80%.


Когда стоит измерять покрытие?
Важно понимать, в какой момент имеет смысл начинать измерять покрытие тестами.
Это не первая задача в автоматизации — покрытие нужно только тогда, когда уже выстроен прочный фундамент.
Давайте разберёмся подробнее.

Когда не стоит измерять покрытие:
1. Когда ещё не написаны автотесты. Звучит очевидно, но встречается часто: если у вас нет самих автотестов, говорить о покрытии рано. Сначала нужно разработать хотя бы базовый набор тестов.
2. Когда тесты нестабильны. Если тесты «падают через раз», зависимы от окружения или flaky — метрика покрытия будет просто вводить в заблуждение. Приоритетнее добиться стабильности и предсказуемости выполнения.
3. Когда не настроена система отчётности. Например, вы ещё не подключили Allure или другой инструмент для визуализации результатов. Тогда вы не сможете нормально анализировать, что именно покрыто, а что нет.
4. Когда тесты не интегрированы в CI/CD. Автоматическое выполнение тестов — это основа для регулярного измерения покрытия. Без CI/CD покрытие будет измеряться вручную или от случая к случаю, и пользы от этого будет мало.

Когда стоит задуматься об измерении покрытия:
 - У вас написан определённый набор автотестов.
 - Они стабильно работают и проходят без ложных падений.
 - Настроен Allure или другой репортинг.
 - Автотесты уже запускаются автоматически в CI/CD.
 - Архитектура тестов выстроена: есть понятная структура, повторное использование кода, изолированные слои (например, PageObject, API-клиенты и другое).

Только после этого вы можете задуматься об измерении покрытия — и это будет правильная точка входа. Покрытие — это надстройка, не база.

Важно! Если у вас нестабильные тесты или не работает CI/CD — это гораздо более приоритетные проблемы, чем отсутствие метрики покрытия.