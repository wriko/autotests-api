втоматическое добавление флагов в pytest
Ссылки:

Официальная документация Pytest по добавлению флагов к команде запуска тестов
Как вы могли заметить, при каждом запуске автотестов часто приходится вручную добавлять флаги -s и -v, чтобы видеть подробный вывод в консоли. Это не всегда удобно, особенно если эти флаги нужны постоянно. К счастью, в pytest есть возможность сделать добавление таких флагов автоматическим для всех запусков.

Для этого можно добавить опцию addopts в файл pytest.ini. Пример настройки:

[pytest]
addopts = -s -v # Опция для автоматического добавления флагов
python_files = *_tests.py test_*.py
python_classes = Test*
python_functions = test_*
markers =
    users: Маркировка для тестов, связанных с пользователями.
    regression: Маркировка для регрессионных тестов.
    authentication: Маркировка для тестов, связанных с аутентификацией.
Теперь при запуске тестов команда pytest будет автоматически включать флаги -s и -v, даже если вы их явно не укажете:

python -m pytest -m "regression"
Пример вывода:

(.venv) username@ip-8-8-8-8 autotests-api % python -m pytest -m "regression" -s -v
====================================================================== test session starts =======================================================================
platform darwin -- Python 3.11.9, pytest-8.3.5, pluggy-1.5.0 -- /Users/username/Documents/autotests-api/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/username/Documents/autotests-api
configfile: pytest.ini
plugins: Faker-36.2.2, anyio-4.8.0, rerunfailures-15.0
collected 37 items / 32 deselected / 5 selected

tests/authentication/test_authentication.py::TestAuthentication::test_login PASSED
tests/users/test_users.py::TestUsers::test_create_user[mail.ru] PASSED
tests/users/test_users.py::TestUsers::test_create_user[gmail.com] PASSED
tests/users/test_users.py::TestUsers::test_create_user[example.com] PASSED
tests/users/test_users.py::TestUsers::test_ger_user_me PASSED

================================================================ 5 passed, 32 deselected in 2.15s ================================================================
Зачем это нужно?
Экономия времени: вам не нужно каждый раз прописывать одни и те же аргументы.
Единообразие: все разработчики в команде будут запускать тесты с одинаковыми параметрами, что минимизирует разночтения и недоразумения.
Гибкость: если в будущем потребуется добавить другие аргументы или флаги, это можно сделать централизованно в одном месте.
Эта опция особенно полезна, если вам нужно всегда запускать тесты с определенными настройками или использовать специальные маркировки по умолчанию.