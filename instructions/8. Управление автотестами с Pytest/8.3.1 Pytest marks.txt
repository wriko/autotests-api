Pytest маркировки (markers)
Ссылки:

Официальная документация Pytest по работе с маркировками
Маркировки (markers) в pytest — это мощный инструмент, который позволяет группировать, фильтровать и настраивать запуск тестов. С помощью маркировок вы можете определять, какие тесты запускать, пропускать или ожидать определенного поведения, а также добавлять метаинформацию к тестам

1. Определение маркировок
Pytest позволяет добавлять произвольные метки (маркировки) к тестовым функциям. Маркировки добавляются с помощью декоратора @pytest.mark.<name>.

Пример:

    import pytest

    @pytest.mark.smoke
    def test_smoke_case():
        assert 1 + 1 == 2

    @pytest.mark.regression
    def test_regression_case():
        assert 2 * 2 == 4

Здесь smoke и regression — это пользовательские маркировки, с помощью которых можно удобно фильтровать тесты при запуске


2. Запуск тестов с определенной маркировкой
Для запуска тестов с определенной маркировкой используйте опцию -m с именем маркировки:
    pytest -m smoke
Этот запуск выполнит только тесты, отмеченные маркировкой smoke.


3. Комбинированные запуски
Вы можете комбинировать маркировки с помощью логических операторов:

Запуск тестов с маркировками smoke и regression:
    python -m pytest -m "smoke and regression"

Запуск тестов с любой из этих маркировок:
    python -m pytest -m "smoke or regression"


4. Использование маркировок для запуска сложных сценариев
Маркировки особенно полезны, если вам нужно управлять большими наборами тестов. Например, можно разделить быстрые и медленные тесты:

    @pytest.mark.fast
    def test_fast():
        pass

    @pytest.mark.slow
    def test_slow():
        pass

Запуск только быстрых тестов:
    python -m pytest -m fast


5. Применение маркировок к классам
Маркировку можно применить к классу:

    @pytest.mark.smoke
    class TestSuite:
        def test_case1(self):
            ...

        def test_case2(self):
            ...

Все тесты в данном классе будут иметь маркировку smoke



Сложные pytest маркировки
Маркировка класса и отдельных тестов внутри класса
Вы можете применять маркировку ко всему классу и одновременно добавлять разные маркировки на отдельные тесты внутри класса. Это позволяет гибко управлять запуском тестов:

import pytest

@pytest.mark.regression
class TestUserAuthentication:

    @pytest.mark.smoke
    def test_login(self):
        pass

    @pytest.mark.slow
    def test_password_reset(self):
        pass

    def test_logout(self):
        pass
В этом примере:

Все тесты класса TestUserAuthentication имеют маркировку regression.
Тест test_login также имеет дополнительную маркировку smoke.
Тест test_password_reset имеет маркировку slow, но тоже относится к регрессионным тестам.
Запуск тестов с маркировкой smoke:

pytest -m "smoke"
 Запуск тестов, которые имеют маркировку regression и не имеют маркировки slow:

pytest -m "regression and not slow"
Несколько маркировок на одном тесте
Вы можете повесить несколько маркировок на один тест, что полезно, когда тест относится к разным категориям (например, smoke, regression и еще что-то).

@pytest.mark.smoke
@pytest.mark.regression
@pytest.mark.critical
def test_critical_login():
    pass
Этот тест имеет три маркировки: smoke, regression и critical. Таким образом, вы можете запускать тесты, которые попадают в любую из этих категорий.

Запуск тестов с маркировкой critical:

pytest -m "critical"
Запуск всех smoke или critical тестов:

pytest -m "smoke or critical"

---------------------------------------------------------
Совмещение маркировок на классе и тестах внутри
Иногда нужно запустить определенные группы тестов, находящиеся в одном классе, но с разными уровнями важности.

    import pytest

    @pytest.mark.api
    class TestUserInterface:

        @pytest.mark.smoke
        @pytest.mark.critical
        def test_login(self):
            pass

        @pytest.mark.regression
        def test_forgot_password(self):
            pass

        @pytest.mark.smoke
        def test_signup(self):
            pass

 - Все тесты класса TestUserInterface помечены как api-тесты.
 - Тест test_login также помечен как smoke и critical.
 - Тест test_forgot_password относится к регрессионным.
 - Тест test_signup помечен как smoke.

Вы можете запускать различные группы тестов:

Запуск только smoke тестов:
    pytest -m "smoke"
Запуск тестов, которые помечены как api и одновременно относятся к regression:
    pytest -m "api and regression"