GitHub Actions


GitHub Actions — это инструмент для автоматизации рабочих процессов на платформе GitHub. Он позволяет автоматически запускать сборку, тестирование, деплой и другие процессы при обновлении кода. В контексте автоматизации тестирования GitHub Actions удобно использовать для настройки CI/CD, чтобы при каждом коммите или Pull Request (PR) запускались автотесты.

Как работает GitHub Actions

1. Workflow (Рабочий процесс) — основной процесс, который описывается в YAML-файле и включает набор задач (jobs), выполняющихся автоматически при определённых событиях, таких как коммит в репозиторий или создание PR.
2. Events (События) — триггеры, которые запускают workflows, например, push в ветку, создание PR, создание релиза и так далее.
3. Jobs (Задачи) — отдельные задачи, которые можно выполнять параллельно или последовательно. Обычно каждый job состоит из нескольких шагов (steps).
4. Steps (Шаги) — это действия, которые последовательно выполняются в рамках одного job. Каждый шаг может включать команду или действие (action).
5. Runners (Исполнители) — машины (серверы), на которых выполняются задачи. GitHub предоставляет свои Ubuntu, Windows и macOS runners, но можно настроить и собственные runners.


Пример файла Workflow для Python автотестов:


Вот пример файла .github/workflows/test.yml, который запускает автотесты на Python с помощью Pytest и формирует отчет в формате HTML:

    name: Run Python Tests

    on:
      push:
        branches:
          - main
      pull_request:
        branches:
          - main

    jobs:
      test:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.8'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Run tests
            run: |
              pytest --html=report.html

          - name: Upload Test Report
            uses: actions/upload-artifact@v2
            with:
              name: test-report
              path: report.html


Объяснение файла
 - name — название workflow, которое будет отображаться в интерфейсе GitHub.
 - on — событие, которое запускает workflow, в данном случае — push и pull_request в ветку main.
 - jobs — определение задач:
        - test — название задачи.
        - runs-on — указывает операционную систему для запуска (в данном примере используется ubuntu-latest).
        - steps — шаги внутри задачи:
            - Checkout code — загружает код репозитория.
            - Set up Python — задаёт нужную версию Python.
            - Install dependencies — устанавливает зависимости.
            - Run tests — запускает тесты с помощью Pytest.
            - Upload Test Report — загружает отчет как артефакт, чтобы его можно было скачать и просмотреть.



Настройка публикации отчета на GitHub Pages

Чтобы отчеты об автотестах автоматически публиковались на GitHub Pages, можно добавить еще один job для копирования отчета в ветку gh-pages:

    name: Run Python Tests

    on:
      push:
        branches:
          - main
      pull_request:
        branches:
          - main

    jobs:
      test:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.8'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Run tests
            run: |
              pytest --html=report.html

          - name: Upload Test Report
            uses: actions/upload-artifact@v2
            with:
              name: test-report
              path: report.html

      deploy:
        needs: test
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Deploy to GitHub Pages
            uses: peaceiris/actions-gh-pages@v3
            with:
              github_token: ${{ secrets.GITHUB_TOKEN }}
              publish_dir: ./
              destination_dir: report.html


Объяснение деплоя на GitHub Pages
 - deploy — дополнительная задача, которая зависит от выполнения test.
 - needs: test — эта строка указывает, что job deploy выполнится только после успешного завершения job test.
 - uses: peaceiris/actions-gh-pages@v3 — популярное готовое действие для публикации файлов на GitHub Pages.
 - github_token — встроенная переменная GitHub, которая позволяет передать доступ для записи.
 - publish_dir и destination_dir — задают, какие файлы публиковать (в данном примере используется report.html).


Преимущества использования GitHub Actions для тестирования
 - Автоматизация тестов — тесты запускаются автоматически при коммитах или PR.
 - Гибкость — поддержка различных триггеров и условий выполнения.
 - Простота интеграции — встроено в GitHub, не требует внешних инструментов.
 - Возможность публикации отчетов — автоматическая публикация результатов на GitHub Pages для лёгкого доступа.
 - Подробнее о GitHub Actions можно узнать из официальной документации.