CircleCI


CircleCI — это облачная платформа CI/CD, которая автоматизирует сборку, тестирование и развертывание приложений. CircleCI позволяет командам легко настроить и масштабировать процессы CI/CD без необходимости управлять собственной инфраструктурой. CircleCI интегрируется с GitHub, GitLab и Bitbucket, что делает его удобным для разработки в командах, использующих распределённые системы контроля версий.

Особенности CircleCI
Облачная и локальная версии: CircleCI можно использовать как облачное решение, так и развернуть локально (CircleCI Server). Облачная версия не требует управления сервером, а локальная подходит для компаний с особыми требованиями безопасности.
Автоматическая интеграция с Git: CircleCI легко интегрируется с системами контроля версий, такими как GitHub и GitLab, и автоматически запускает процессы CI/CD при обновлениях в репозитории.
Поддержка Docker: CircleCI активно использует Docker-контейнеры для изоляции окружений, что упрощает создание одинаковых рабочих окружений для сборки и тестирования.
Автоматическое масштабирование: CircleCI позволяет динамически увеличивать количество параллельных сборок в зависимости от потребностей команды.
Как работает CircleCI?
CircleCI использует config.yml для настройки процессов CI/CD. В этом файле описываются шаги (steps) и рабочие процессы (jobs), которые определяют, как и когда будет запускаться сборка, тесты и другие процессы.

Jobs и Steps: В CircleCI процессы делятся на jobs, а каждый job содержит несколько шагов (steps). Например, job для тестирования может включать шаги установки зависимостей, запуска тестов и публикации отчётов.
Workflows: С помощью workflows можно управлять последовательностью выполнения нескольких jobs. Это удобно для сложных процессов, таких как параллельное тестирование и сборка.
Кэширование и артефакты: CircleCI поддерживает кэширование и хранение артефактов, что ускоряет выполнение повторных задач и позволяет сохранять результаты сборок или тестов для дальнейшего использования.
Пример настройки CircleCI для Python автотестов
Для настройки CircleCI вам потребуется файл .circleci/config.yml в корневой директории проекта, где будут описаны этапы и команды для выполнения. Вот пример для запуска автотестов на Python:

version: 2.1

jobs:
  test:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: Установка зависимостей
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Запуск тестов
          command: |
            . venv/bin/activate
            pytest --junitxml=test-results/results.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: pytest_results

workflows:
  version: 2
  test_workflow:
    jobs:
      - test
В этом примере:

docker: задаёт Docker-контейнер с Python 3.9, в котором будут выполняться все шаги job'а.
checkout: команда для клонирования репозитория.
run: устанавливает зависимости и запускает тесты.
store_test_results и store_artifacts: сохраняют результаты тестов и артефакты для дальнейшего анализа.
Запуск workflows
Когда в репозиторий пушится код, CircleCI автоматически запускает workflow в соответствии с конфигурацией. Это позволяет настроить автоматический запуск тестов или других процессов при каждом обновлении кода.

Преимущества и недостатки
Преимущества:

CircleCI — облачное решение, что снимает нагрузку по управлению сервером.
Поддержка Docker, кэширования и параллельных сборок.
Гибкость в настройке workflows и jobs для создания кастомных CI/CD процессов.
Недостатки:

Бесплатные функции ограничены, поэтому при больших объёмах использования могут потребоваться платные планы.
Для некоторых типов проектов могут возникнуть ограничения производительности в зависимости от выбранных ресурсов.
CircleCI предоставляет удобный и масштабируемый способ организации CI/CD процессов. Интеграция с популярными системами контроля версий и Docker, а также гибкость в настройке workflows делают CircleCI популярным выбором для команд, работающих в облачной среде.

