Добавляем файл .gitignore
Для чего нужен файл .gitignore?
Файл .gitignore сообщает Git, какие файлы и папки необходимо исключить из репозитория. Например, если у вас локально создана папка .venv для виртуального окружения Python, она специфична только для вашего локального окружения и не нужна в репозитории, так как у других разработчиков/автоматизаторов будет своя .venv для их окружений.

Создаем файл .gitignore
В корне проекта autotests-api создадим файл .gitignore:

.
└── autotests-api/
    └── .gitignore
Добавим в .gitignore следующие строки:

# pycharm
.idea

# python
.venv
__pycache__

# allure
allure-results
allure-report
Подробное объяснение:
.idea — папка, которую создает PyCharm для хранения настроек проекта. В удаленном репозитории она не нужна, так как содержит настройки только для PyCharm. В других редакторах, например, VS Code, эта папка не будет использована.
.venv — исключает папку виртуального окружения Python, а __pycache__ убирает кеши Python.
allure-results, allure-report — исключают папки с отчетами Allure.
Публикация изменений на GitHub
Теперь, чтобы зафиксировать и опубликовать изменения, выполним следующие команды:

git add .
git status
git commit -m "Added .gitignore"
git push origin main
Открыв репозиторий на GitHub, вы увидите, что в нем отсутствуют файлы и папки, перечисленные в .gitignore, что является хорошей практикой.

Рекомендация: Добавление .env в .gitignore
Обычно в .gitignore добавляют также файл .env, так как он может содержать конфиденциальные данные, такие как токены, пароли и другие пользовательские данные. В нашем случае таких данных пока нет, но в будущем это может пригодиться.

Важно! Иногда Git может закешировать файлы, которые должны быть исключены. Если после создания .gitignore он не видит файлы/папки, добавленные в него, выполните команду:

git rm -r --cached .
Эта команда удаляет кешированные файлы, и при следующем git add . только нужные файлы будут добавлены, и .gitignore будет работать корректно.