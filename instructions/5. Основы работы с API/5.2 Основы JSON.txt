Основы JSON
=================
Ссылки:
JSON - https://ru.wikipedia.org/wiki/JSON
Официальный сайт JSON - https://www.json.org/json-en.html

Что такое JSON?
JSON (JavaScript Object Notation) — это текстовый формат обмена данными, который удобен для хранения и передачи структурированной информации. Он основан на синтаксисе JavaScript, но поддерживается практически во всех языках программирования.

Пример JSON:

{
  "name": "Иван",
  "age": 30,
  "is_student": false,
  "courses": ["Python", "QA Automation", "API Testing"],
  "address": {
    "city": "Москва",
    "zip": "101000"
  }
}
Основные правила JSON
Данные представляются в виде пар "ключ-значение".

Ключи — это строки в двойных кавычках.
Значения могут быть разного типа.
Поддерживаемые типы данных:

string (строка) → "example"
number (число) → 123, 3.14
boolean (логическое значение) → true, false
null (отсутствие значения) → null
array (массив) → ["one", "two", "three"]
object (объект) → { "key": "value" }
Структура JSON может быть вложенной.

Вложенные объекты и массивы позволяют представлять сложные структуры данных.


Работа с JSON в Python
========================


-----------------------------------
Загрузка JSON (парсинг)
-----------------------------------
import json

json_data = '{"name": "Иван", "age": 30, "is_student": false}'
parsed_data = json.loads(json_data)  # Преобразуем JSON-строку в Python-объект (dict)

print(parsed_data["name"])  # Выведет: Иван

-----------------------------------
Сохранение JSON (сериализация)
-----------------------------------
data = {
    "name": "Мария",
    "age": 25,
    "is_student": True
}

json_string = json.dumps(data, indent=4)  # Преобразуем Python-объект в JSON-строку
print(json_string)

-----------------------------------
Чтение JSON из файла
-----------------------------------
with open("data.json", "r", encoding="utf-8") as file:
    data = json.load(file)  # Загружаем JSON из файла
    print(data)

-----------------------------------
Запись JSON в файл
-----------------------------------
with open("data.json", "w", encoding="utf-8") as file:
    json.dump(data, file, indent=4, ensure_ascii=False)  # Сохраняем JSON в файл

-----------------------------------
Частые ошибки при работе с JSON
-----------------------------------
Одинарные кавычки вместо двойных
❌ {'name': 'Иван'} → ✅ {"name": "Иван"}

Запятая после последнего элемента
❌ {"name": "Иван", "age": 30, }

Использование None, True, False вместо null, true, false (Python vs JSON)
❌ {"is_student": None} → ✅ {"is_student": null}